" Froppy
" Spaces & Tabs {{{

" Tab setup
set tabstop=4       " number of spaces to tab
set softtabstop=4   " number of spaces inside tab
set expandtab       " add spaces when pressing tab

" }}}
" UI Config {{{

" Enable line numbers
set number

" Show last command in bottom right
set showcmd

" Show cursur under line
set cursorline

" Load filetype-specific indent files
" Note: can load files from ~/.vim/indent/type.vim
filetype indent on

" Show visual autocomplete in vim
set wildmenu

" Only redraw when necessary. Increases performance
set lazyredraw

" Show matching braces
set showmatch

" Word wrap only on spaces
set linebreak

" Set smart case sensitivity
set ignorecase

" enable utf-8
set encoding=utf-8

" Enable use of mouse
set mouse=a

" }}}
" Searching {{{

" Search as you type
set incsearch

" Highlight all matches when searching
set hlsearch

" }}}
" Folding {{{

" Enable folding
set foldenable

" Sets folding to be on indents
set foldmethod=indent

" Ensure all folds are open on load
set foldlevelstart=99

" Enable folding with the spacebar
nnoremap <space> za

" }}}
" Movement {{{

" Make movements through wrapped lines work
nnoremap j gj
nnoremap k gk

"split navigations
"map <Esc>[; <C-Semicolon>
"map! <Esc>[; <C-Semicolon>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Add split navigation for terminals too!
tnoremap <C-J> <C-W><C-J>
tnoremap <C-K> <C-W><C-K>
tnoremap <C-L> <C-W><C-L>
tnoremap <C-H> <C-W><C-H>

" Vimwiki move columns
nnoremap <leader>h :VimwikiTableMoveColumnLeft<CR>
nnoremap <leader>l :VimwikiTableMoveColumnRight<CR>

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" highlight last inserted text
nnoremap gV `[v`]

" }}}
" Leader Shortcuts {{{

" Use , as leader key
let mapleader=","

" allow jj to leave modes
imap jj <esc>

" Use system clipboard
set clipboard=unnamedplus,unnamed

" Show super undo menu
nnoremap <leader>u :GundoToggle<CR>

" Save current session, reopen with vim -S
nnoremap <leader>s :mksession!<CR>

" Git shortcuts
nnoremap <leader>c :!git commit -a<CR>

" Add pydocstring shortcut
nnoremap <leader>d :Pydocstring<CR>

" }}}
" Vundle {{{

set nocompatible    " required by vundle
filetype off        " required by vundle

" include vundle in path and start it
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" vundle must manage vundle
Plugin 'VundleVim/Vundle.vim'

" Plugins {{{

" simpylfold ensures that folds follow code rather than indents
Plugin 'tmhedberg/simpylfold'
let g:SimpylFold_docstring_preview = 0  " show docs when folded
let g:SimpylFold_fold_docstring = 1     " allow docstrings to fold

" autoformat python
Plugin 'chiel92/vim-autoformat'
let g:python3_host_prog='/usr/bin/python3'
let g:formatter_yapf_style = 'pep8'
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0
let g:formatterpath = ['$HOME/src/latexindent.pl']

" autocomplete
Bundle 'valloric/youcompleteme'
let g:ycm_filetype_whitelist = {'python': 1, 'sh': 1, 'ino': 1}

" wiki in vim!
Plugin 'vimwiki/vimwiki'
let g:vimwiki_list = [{   'path':   '~/vimwiki/',
                        \ 'syntax': 'markdown', 
                        \ 'ext':    '.md',     
                        \ 'auto_diary_index': 1,
                        \ 'auto_generate_links': 1,
                        \ 'auto_toc': 1}]       " Automatically update toc on save
let g:vimwiki_folding = 'expr' " Enable folding for markdown headers

" Allows super undo menu
"Plugin 'sjl/gundo.vim'
"let g:gundo_prefer_python3 = 1 " Use python3

" Allow fuzzy search of files
Plugin 'kien/ctrlp.vim'
let g:ctrlp_match_window = 'bottom,order:ttb'                   " Order results from top to bottom
let g:ctrlp_switch_buffer = 0                                   " Always open in new buffer
let g:ctrlp_working_path_mode = 0                               " Update path with vim
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'  " Use ag instead of standard search

" Create docstrings with :Pydocstring
Plugin 'heavenshell/vim-pydocstring'
let g:pydocstring_formatter = 'google'  " Use google format
let g:pydocstring_enable_mapping = 0    " Ensure no keymappings (it overrdies <C-l> for some reason

" Colorscheme
Plugin 'jaredgorski/spacecamp'

" Vimtex, latex in vim
Plugin 'lervag/vimtex'
let g:vimtex_fold_enabled = 1
"let g:vimtex_fold_manual = 1
let g:vimtex_view_general_viewer = 'qpdfview'
let g:vimtex_view_general_options
    \ = '--unique @pdf\#src:@tex:@line:@col'
" let g:vimtex_view_general_options_latexmk = '--unique'

" Arduino Commands
Plugin 'stevearc/vim-arduino'
let g:arduino_dir='/usr/share/arduino'
let g:arduino_cmd='/usr/share/arduino/arduino'
let g:arduino_home_dir=$HOME . ".arduino15"


" }}}

call vundle#end()

filetype plugin indent on

" }}}
" Colors {{{

" process syntax
syntax on

" Set colorscheme
"colorscheme dogrun
"colorscheme badwolf
"colorscheme synthwave84
colorscheme spacecamp

" badwolf config
let g:badwolf_tabline = 3 " Make tab line much lighter than the backgroud

" }}}
" Autorun for this file {{{
" vim: set foldmethod=marker:
" vim: set foldlevel=0:
" }}}
